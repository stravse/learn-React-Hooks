03-29-2022
- Learned the whole react hooks
- Must say it is a easy to read functional components than class based components.
-- No more using this and binding this to all class functions equals to better readibility and less verboise
-- found out that i dont need to instal redux and can just use useReducer for managing state
-- would like to know better about how to read and do useReducer in my projects. would like to convert most of my projects in React and use the useReducer for functional
-- useState is the short form of state management and i dont need to always use this.setState
-- useEffect now squashes componentWillMount, componentDidUpdate, and componentWillUnmount into one function call

It is better to pair useState and useEffect to make React know which one i want to use for which state i want to listen to


needs to learn more about useReducer

03/30/2022
- Learned a whole lot about Redux and played a whole aroung with useReducer
-- after brushing up with some concepts with redux I found out that redux might not be the best fit for the javascript-calculator project
-- Redux just have too much stuff to write before we can go ahead and use the same thing in react
-- however I might start and use useReducer since it might give me some practice in using redux and might find the switch to not be that binding
-- Found out about createContext / react context and it feels like the same as a store in redux?
-- Fount out that context makes the passing down to every component obsolete i think?
